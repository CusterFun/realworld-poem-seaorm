//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "article_comment")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub comment_id: i64,
    pub article_id: Uuid,
    pub user_id: Uuid,
    #[sea_orm(column_type = "Text")]
    pub body: String,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
    belongs_to = "super::article::Entity",
    from = "Column::ArticleId",
    to = "super::article::Column::ArticleId",
    on_update = "NoAction",
    on_delete = "Cascade"
    )]
    Article,
    #[sea_orm(
    belongs_to = "super::user::Entity",
    from = "Column::UserId",
    to = "super::user::Column::UserId",
    on_update = "NoAction",
    on_delete = "Cascade"
    )]
    User,
}

impl Related<super::article::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Article.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
